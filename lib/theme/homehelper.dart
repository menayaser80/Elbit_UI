import 'dart:ui';
import 'package:elbit_ui/core/utils/size_utils.dart';
import 'package:flutter/material.dart';

String _appTheme = "primary";

/// Helper class for managing themes and colors.
class ThemeHelper {
  // A map of custom color themes supported by the app
  Map<String, PrimaryColors> _supportedCustomColor = {
    'primary': PrimaryColors()
  };

// A map of color schemes supported by the app
  Map<String, ColorScheme> _supportedColorScheme = {
    'primary': ColorSchemes.primaryColorScheme
  };

  /// Changes the app theme to [_newTheme].
  void changeTheme(String _newTheme) {
    _appTheme = _newTheme;
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors _getThemeColors() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedCustomColor.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    return _supportedCustomColor[_appTheme] ?? PrimaryColors();
  }

  /// Returns the current theme data.
  ThemeData _getThemeData() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedColorScheme.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    var colorScheme =
        _supportedColorScheme[_appTheme] ?? ColorSchemes.primaryColorScheme;
    return ThemeData(
      visualDensity: VisualDensity.standard,
      colorScheme: colorScheme,
      textTheme: TextThemes.textTheme(colorScheme),
      scaffoldBackgroundColor: appTheme.gray100,
      dividerTheme: DividerThemeData(
        thickness: 7,
        space: 7,
        color: appTheme.blueGray300,
      ),
    );
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors themeColor() => _getThemeColors();

  /// Returns the current theme data.
  ThemeData themeData() => _getThemeData();
}

/// Class containing the supported text theme styles.
class TextThemes {
  static TextTheme textTheme(ColorScheme colorScheme) => TextTheme(
    bodyLarge: TextStyle(
      color: appTheme.indigo800,
      fontSize: 16.fSize,
      fontFamily: 'Tajawal',
      fontWeight: FontWeight.w400,
    ),
    bodyMedium: TextStyle(
      color: appTheme.gray900,
      fontSize: 14.fSize,
      fontFamily: 'Tajawal',
      fontWeight: FontWeight.w400,
    ),
    bodySmall: TextStyle(
      color: Color(0XFF8797A8),
      fontSize: 12.fSize,
      fontFamily: 'Tajawal',
      fontWeight: FontWeight.w400,
    ),
    labelLarge: TextStyle(
      color: appTheme.blueGray300,
      fontSize: 12.fSize,
      fontFamily: 'Tajawal',
      fontWeight: FontWeight.w700,
    ),
    titleLarge: TextStyle(
      color: appTheme.gray900,
      fontSize: 20.fSize,
      fontFamily: 'Tajawal',
      fontWeight: FontWeight.w700,
    ),
    titleMedium: TextStyle(
      color: Color(0XFF000000),
      fontSize: 16.fSize,
      fontFamily: 'Tajawal',
      fontWeight: FontWeight.w700,
    ),
    titleSmall: TextStyle(
      color: appTheme.whiteA700,
      fontSize: 14.fSize,
      fontFamily: 'Tajawal',
      fontWeight: FontWeight.w700,
    ),
  );
}

/// Class containing the supported color schemes.
class ColorSchemes {
  static final primaryColorScheme = ColorScheme.light();
}

/// Class containing custom colors for a primary theme.
class PrimaryColors {
  // Black
  Color get black900 => Color(0XFF000000);

  // BlueGray
  Color get blueGray300 => Color(0XFF8797A8);
  Color get blueGray600 => Color(0XFF43688A);
  Color get blueGray60001 => Color(0XFF506173);

  // Cyan
  Color get cyan900 => Color(0XFF1D4870);

  // Gray
  Color get gray100 => Color(0XFFF5F7FA);
  Color get gray900 => Color(0XFF142433);

  // Green
  Color get green700 => Color(0XFF2DA905);

  // Indigo
  Color get indigo800 => Color(0XFF224971);
  Color get indigo80001 => Color(0XFF214A71);

  // Teal
  Color get teal50 => Color(0XFFDAE6F2);

  // White
  Color get whiteA700 => Color(0XFFFFFFFF);
  Color get amberA400 => Color(0XFFF8BD00);

  // Black
  Color get black9007f => Color(0X7F000000);



  // DeepOrange
  Color get deepOrange200 => Color(0XFFFFA8A7);

  // Gray
  Color get gray10001 => Color(0XFFF5F7FA);

  // Green
  Color get gray600 => Color(0XFF6D7379);
  // Red
  Color get red500 => Color(0XFFF44336);
  Color get red600 => Color(0XFFE33629);

  // Teal
  Color get teal10000 => Color(0X00B9D4DB);
  // Teal
}

PrimaryColors get appTheme => ThemeHelper().themeColor();
ThemeData get theme => ThemeHelper().themeData();
